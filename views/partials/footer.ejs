
<% const currentYear=new Date().getFullYear(); %>

<div class="bg-dark text-center" style="padding: 1em 0 1em 0">
  <h5 class="card-title" style="color: white">
    Share your secrets, anonymously!
  </h5>
  <h6 class="card-title" style="color: white">
    &copy; Copyright <%= currentYear %>
  </h6>
  <p class="card-text" style="color: white">
    Made by
    <a
      href="https://github.com/Kritika30032002"
      style="text-decoration: none; color: white"
    >
      Kritika Gupta
    </a>
  </p>
  <!-- <p class="card-text" style="color: white;">&copy; Copyright <%= currentYear %> </p> -->
  <!-- <div style="padding-bottom: 5em;">     -->
  <a
    href="https://www.linkedin.com/in/kritika-gupta-343458212"
    class="btn my-2 my-sm-0 social"
    type="submit"
    style="border: none; margin-right: 1em"
  >
    <img
      src="https://static-00.iconduck.com/assets.00/linkedin-icon-2048x2048-ya5g47j2.png"
      height="50px"
      width="50px"
      style="border: 3px white solid; border-radius: 100%"
    />
  </a>
  <a
    href="https://github.com/Kritika30032002"
    class="btn my-2 my-sm-0 social"
    type="submit"
    style="border: none"
  >
    <img
      src="https://cdn3.iconfinder.com/data/icons/inficons/512/github.png"
      height="50px"
      width="50px"
      style="border: 3px white solid; border-radius: 100%"
    />
  </a>

  <!-- </div> -->
</div>
<script>
  function toggle_nav() {
    let naV = document.getElementById("nav_small");
    let Nav = document.getElementById("nav_small2");
    if (
      naV.classList.contains("side_nav") &&
      Nav.classList.contains("content")
    ) {
      naV.classList.remove("side_nav");
      naV.classList.add("hide");
      Nav.classList.remove("content");
      Nav.classList.add("hide");
    } else {
      naV.classList.remove("hide");
      naV.classList.add("side_nav");
      Nav.classList.remove("hide");
      Nav.classList.add("content");
    }
  }
  function toggle_nav_body() {
    let naV = document.getElementById("nav_small");
    if (naV.classList.contains("side_nav")) {
      naV.classList.remove("side_nav");
      naV.classList.add("hide");
    }
  }
  function toggleTheme() {
    document.querySelectorAll("*").forEach((el) => {
      el.classList.toggle("dark");
    });
    // changing the icon inside the theme toggle button
    if (localStorage.getItem("theme") === "light") {
      document.querySelector("#theme-toggle .fa-sun").style.display =
        "none";
      document.querySelector("#theme-toggle .fa-moon").style.display =
        "inline-block";
    } else {
      document.querySelector("#theme-toggle .fa-sun").style.display =
        "inline-block";
      document.querySelector("#theme-toggle .fa-moon").style.display =
        "none";
    }
  }

  if (!localStorage.getItem("theme")) {
    // if theme is not already set on localstorage
    if (
      window.matchMedia &&
      window.matchMedia("(prefers-color-scheme: dark)").matches
    ) {
      // dark mode preferred by user as per os settings
      localStorage.setItem("theme", "dark");
    } else {
      localStorage.setItem("theme", "light");
    }
  }

  document.getElementById("theme-toggle").addEventListener("click", (e) => {
    e.preventDefault();
    localStorage.setItem(
      "theme",
      localStorage.getItem("theme") === "light" ? "dark" : "light"
    );
    toggleTheme();
  });
</script>

<!-- library to break full line into separate words -->
<script src="https://unpkg.com/split-type"></script>

<!-- animation library -->
<script>
  // Implementing the landing page animation
  function startAnimation() {
    const heading = document.querySelector(".hero .main-content");
    if(!heading){
      return;
    }
    const buttonContainer = document.querySelector(
      ".hero .buttons-container"
    );

    const init_value = heading.innerHTML;
    const headingSplit = new SplitType(heading);

    for (let i = 0; i < headingSplit.chars.length; i++) {
      let char = headingSplit.chars[i];
      char.style.setProperty("animation-delay", i * 0.05 + "s");
    }

    // after whole animation restore initial content so that newly formed characters don't interfere with other things like resizing
    setTimeout(() => {
      //   heading.innerHTML = init_value;
      //   heading.style.lineHeight = "1.72em";

      buttonContainer.style.opacity = "1";
      buttonContainer.style.transform = "none";
    }, headingSplit.chars.length * 0.05 * 1000 + 500);
  }
  window.onload = () => {
    startAnimation();
    if (localStorage.getItem("theme") === "dark") {
      toggleTheme();
    }
  };
</script>
</body>
</html>
