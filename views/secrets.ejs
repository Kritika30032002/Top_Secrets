<%- include('partials/header') %>

  <div class="secrets-container jumbotron text-center">
    <div class="container">
      <i class="fas fa-key fa-6x"></i>
      <h1 class="display-3">You've Discovered My Secret!</h1>

      <% usersWithSecrets.forEach(function(user){ %>
        <% user.secret.forEach(function(secret,index){ %>

          <div class="card">
            <div class="card-body" style="display: flex;justify-content:flex-start;">
              <p class="secret-text">
              <div class="inner-secret-text" id="secret-text-<%= index %>">
                <%= secret.title %>
              </div>
              <div class="vote-container" id="vote-container-<%= index %>">
                <img class="vote-image" alt="Upvote" data-index='<%= index %>' data-value='<%= user.username %>'
                  id="upvote-image-<%= index %>" data-upvotecount='<%= secret.upvote %>'
                  data-downvotecount='<%= secret.downvote %>' onclick="handleUpvote(this ,<%= index %>)"
                  src="<%= upvoted ? 'https://img.icons8.com/material-rounded/24/thumb-up.png' : 'https://img.icons8.com/external-royyan-wijaya-detailed-outline-royyan-wijaya/24/external-thumbs-up-interface-royyan-wijaya-detailed-outline-royyan-wijaya.png' %>" />
                <span class="vote-count" id="upvote-count-<%= index %>">
                  <%= secret.upvote %>
                </span>
                <img class="vote-image" width="24" height="24" data-index='<%= index %>'
                  id="downvote-image-<%= index %>" data-value='<%= user.username %>'
                  data-upvotecount='<%= secret.upvote %>' data-downvotecount='<%= secret.downvote %>'
                  onclick="handleDownvote(this, <%= index %>)"
                  src="<%= downvoted ? 'https://img.icons8.com/material/24/thumbs-down--v1.png' : 'https://img.icons8.com/external-royyan-wijaya-detailed-outline-royyan-wijaya/24/external-thumbs-down-interface-royyan-wijaya-detailed-outline-royyan-wijaya.png' %>"
                  alt="Downvote" />
                <span class="vote-count" id="downvote-count-<%= index %>">
                  <%= secret.downvote %>
                </span>
              </div>
              </p>
              <!-- Edit and Remove Icons -->
              <div style="display: flex; margin-left: 15px;" class="edit-rem-icon">
                <img class="icon edit-icon" alt="Edit" id="edit-secret-<%= index %>" onclick="handleEditSecret(<%= index %>,'<%= user.username %>',<%= secret.upvote %>,<%= secret.downvote %>)"
                src="https://img.icons8.com/ios-glyphs/30/a7daff/edit.png" style="cursor:pointer; margin-right: 10px;" />
                
                <img class="icon remove-icon" alt="Remove" id="remove-secret-<%= index %>" onclick="handleRemoveSecret(<%= index %>)"
                src="https://img.icons8.com/material-outlined/24/ff4b4b/delete.png" style="cursor:pointer;" />
              </div>
            </div>
          </div>
          <% }) %>
            <% }) %>
              <style>
                .card {
                    margin: 10px 0px;
                    height: 80px;
                    background-color: #315B9A;
                    transition: transform 0.3s ease-in-out;
                    font-size: 20px;
                    color: white;
                    font-weight: 600;
                    padding: 0px;
                  }
                  .card-text {
                    color: #A7DAFF;
                  }
                @media (min-width:770px) {
                  .card:hover {
                    transform: scale(1.05);
                    box-shadow: 0 0 15px #64a9db;
                  }
                }
                
              </style>
              <script>

                let upvoted = <%= upvoted %>;
                let downvoted = <%= downvoted %>;
                function handleUpvote(element, index) {

                  let upvoteCount = element.getAttribute("data-upvotecount");
                  let downvoteCount = element.getAttribute("data-downvotecount");

                  //let index = element.getAttribute('data-index');
                  let username = element.getAttribute('data-value');
                  //console.log("index: " + index + " username : " + username);

                  if (!upvoted) {
                    upvoted = true;
                    upvoteCount++;
                    if (downvoted) {
                      downvoted = false;
                    }
                  } else {
                    upvoted = false;
                  }

                  updateVotes(upvoteCount, downvoteCount, index, username);
                  // // Update the image source and count on the page
                  //console.log("upvoted: " + upvoted);
                  //console.log("downvoted: " + downvoted);
                  updateUI(upvoted, downvoted, upvoteCount, downvoteCount, index);
                }

                function handleDownvote(element, index) {
                  let upvoteCount = element.getAttribute("data-upvotecount");
                  let downvoteCount = element.getAttribute("data-downvotecount");

                  //let index = element.getAttribute('data-index');
                  let username = element.getAttribute('data-value');
                  //console.log("index: " + index + " username : " + username);

                  if (!downvoted) {
                    downvoted = true;
                    //upvoted = false;
                    downvoteCount++;
                    if (upvoted) {
                      upvoted = false;
                      //upvoteCount--;
                    }
                  } else {
                    downvoted = false;
                    //downvoteCount--;
                  }

                  updateVotes(upvoteCount, downvoteCount, index, username);
                  // Update the image source and count on the page
                  //console.log("upvoted: " + upvoted);
                  //console.log("downvoted: " + downvoted);

                  updateUI(upvoted, downvoted, upvoteCount, downvoteCount, index);
                }

                function updateVotes(upvoteCount, downvoteCount, index, username) {
                  // Implement logic to send an AJAX request or use fetch to update the server-side vote counts
                  // You would typically send a POST request to your server here
                  // Example using fetch:
                  fetch('/api/votes', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                      upvoteCount,
                      downvoteCount,
                      index,
                      username,
                    }),
                  })
                    .then(response => response.json())
                    .then(data => console.log('Votes updated:', data))
                    .catch(error => console.error('Error updating votes:', error));
                }

                function updateUI(upvoted, downvoted, upvoteCount, downvoteCount, index) {
                  // Update the image sources and vote counts on the page for the specific secret
                  const containerId = `vote-container-${index}`;
                  const upvoteImageId = `upvote-image-${index}`;
                  const downvoteImageId = `downvote-image-${index}`;
                  const upvoteCountId = `upvote-count-${index}`;
                  const downvoteCountId = `downvote-count-${index}`;

                  const upvoteImage = document.getElementById(upvoteImageId);
                  const downvoteImage = document.getElementById(downvoteImageId);

                  const upvoteCountElement = document.getElementById(upvoteCountId);
                  const downvoteCountElement = document.getElementById(downvoteCountId);

                  //getting wrong values -- null
                  //console.log(upvoteImage)
                  //console.log(downvoteImage)

                  //getting correct values below
                  //console.log(upvoteCountElement)
                  //console.log(downvoteCountElement)

                  if (upvoteImage && downvoteImage && upvoteCountElement && downvoteCountElement) {
                    upvoteImage.src = upvoted ? 'https://img.icons8.com/material-rounded/24/thumb-up.png' : 'https://img.icons8.com/external-royyan-wijaya-detailed-outline-royyan-wijaya/24/external-thumbs-up-interface-royyan-wijaya-detailed-outline-royyan-wijaya.png';
                    downvoteImage.src = downvoted ? 'https://img.icons8.com/material/24/thumbs-down--v1.png' : 'https://img.icons8.com/external-royyan-wijaya-detailed-outline-royyan-wijaya/24/external-thumbs-down-interface-royyan-wijaya-detailed-outline-royyan-wijaya.png';
                    upvoteCountElement.innerText = upvoteCount;
                    downvoteCountElement.innerText = downvoteCount;
                  } else {
                    console.error(`One or more elements not found for secret at index ${index}`);
                  }
                }

                // Handling edit button functionality 
                function handleEditSecret(index, username, upvote, downvote) {
                  const secretTextElement = document.getElementById(`secret-text-${index}`);
                  if (!secretTextElement) {
                    console.error(`Element with ID secret-text-${index} not found`);
                    return; // Exit if the element doesn't exist
                  }
                  const secretText = secretTextElement.innerText;
                  const body = secretTextElement.parentElement;
                  body.className = 'edit';
                  // Replace the secret text with an input field for editing
                  const inputElement = document.createElement("input");
                  inputElement.type = "text";
                  inputElement.className = "editInput";
                  inputElement.value = secretText;
                  inputElement.id = `edit-input-${index}`;
                  // inputElement.style.width = "100%";
                  // inputElement.style.marginBottom = "20px";

                  secretTextElement.replaceWith(inputElement);

                  // Add Save Button
                  const saveButton = document.createElement("button");
                  saveButton.innerText = "Save";
                  saveButton.className = 'saveBtn';
                  saveButton.style.marginLeft = "10px";
                  saveButton.style.marginTop = "-10px";
                  saveButton.style.marginBottom = "10px";
                  saveButton.onclick = function() {
                    saveEditedSecret(index, username, upvote, downvote);
                  };

                  // Add Cancel Button
                  const cancelButton = document.createElement("button");
                  cancelButton.innerText = "Cancel";
                  saveButton.className = 'cancelBtn';
                  cancelButton.style.marginLeft = "5px";
                  cancelButton.style.marginTop = "-10px";
                  cancelButton.style.marginBottom = "10px";
                  cancelButton.onclick = function() {
                    cancelEdit(index, secretText, secretTextElement);
                  };

                  inputElement.parentElement.appendChild(saveButton);
                  inputElement.parentElement.appendChild(cancelButton);
                }

                function cancelEdit(index, originalText, originalSecretElement) {
                  // Create the original secret text element
                  originalSecretElement.innerText = originalText;

                  // Find the input element
                  const inputElement = document.getElementById(`edit-input-${index}`);

                  // Replace the input element with the original text
                  inputElement.replaceWith(originalSecretElement);

                  // Remove the Save and Cancel buttons
                  const parentElement = originalSecretElement.parentElement;
                  
                  // Assuming the buttons are added to the same parent as the input
                  const buttons = parentElement.querySelectorAll("button");

                  buttons.forEach(button => {
                    if (button.innerText === "Save" || button.innerText === "Cancel") {
                      parentElement.className = 'card-body';
                      button.remove(); // Remove both Save and Cancel buttons
                    }
                  });
                }
                
                function saveEditedSecret(index, username, upvote, downvote) {
                  const editedText = document.getElementById(`edit-input-${index}`).value;
                  // Make a request to the server to save the edited secret
                  fetch('/api/save-update-secret', {
                    method: 'POST',
                    credentials: 'include',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                      index,
                      username,
                      newSecret: editedText,
                      upvote,
                      downvote,
                    }),
                  })
                  .then(response => response.json())
                  .then(data => {
                      const newSecretElement = document.createElement("div");
                      newSecretElement.className = "card-body";
                      newSecretElement.style = "display: flex; justify-content: flex-start;";
                      newSecretElement.innerHTML = `
                          <p class="secret-text">
                            <div class="inner-secret-text" id="secret-text-${index}">
                              ${editedText}
                            </div>
                            <div class="vote-container" id="vote-container-${index}">
                              <img class="vote-image" alt="Upvote" data-index="${index}" data-value="${username}"
                                id="upvote-image-${index}" data-upvotecount="${upvote}"
                                data-downvotecount="${downvote}" onclick="handleUpvote(this, ${index})" width="24"
                                height="24"
                                src="${upvoted ? 'https://img.icons8.com/material-rounded/24/thumb-up.png' : 'https://img.icons8.com/external-royyan-wijaya-detailed-outline-royyan-wijaya/24/external-thumbs-up-interface-royyan-wijaya-detailed-outline-royyan-wijaya.png'}" />
                              <span class="vote-count" id="upvote-count-${index}">
                                ${upvote}
                              </span>
                              <img class="vote-image" width="24" height="24" data-index="${index}"
                                id="downvote-image-${index}" data-value="${username}"
                                data-upvotecount="${upvote}" data-downvotecount="${downvote}"
                                onclick="handleDownvote(this, ${index})"
                                src="${downvoted ? 'https://img.icons8.com/material/24/thumbs-down--v1.png' : 'https://img.icons8.com/external-royyan-wijaya-detailed-outline-royyan-wijaya/24/external-thumbs-down-interface-royyan-wijaya-detailed-outline-royyan-wijaya.png'}"
                                alt="Downvote" />
                              <span class="vote-count" id="downvote-count-${index}">
                                ${downvote}
                              </span>
                            </div>
                          </p>
                          <!-- Edit and Remove Icons -->
                          <div style="display: flex; margin-left: 15px;">
                            <img class="icon edit-icon" alt="Edit" id="edit-secret-${index}" onclick="handleEditSecret(${index},'${username}',${upvote},${downvote})"
                              src="https://img.icons8.com/ios-glyphs/30/a7daff/edit.png" style="cursor:pointer; margin-right: 10px;" />
                            <img class="icon remove-icon" alt="Remove" id="remove-secret-${index}" onclick="handleRemoveSecret(${index})"
                              src="https://img.icons8.com/material-outlined/24/ff4b4b/delete.png" style="cursor:pointer;" />
                          </div>
                      `;

                      const editContainer = document.getElementById(`edit-input-${index}`).parentElement;
                      editContainer.replaceWith(newSecretElement);
                  })
                  .catch(error => console.error('Error:', error));
                }

                // Handling delete button functionality 
                function handleRemoveSecret(index) {
                  if (confirm('Are you sure you want to delete this secret?')) {
                    fetch('/api/delete-secret', {
                      method: 'POST',
                      credentials: 'include',
                      headers: {
                        'Content-Type': 'application/json',
                      },
                      body: JSON.stringify({ index }),
                    })
                    .then(response => response.json())
                    .then(data => {
                      // Remove the card from the DOM
                      const cardElement = document.getElementById(`secret-text-${index}`).parentElement.parentElement;
                      cardElement.remove();
                    })
                    .catch(error => console.error('Error deleting secret:', error));
                  }
                }

              </script>


              <hr />
              <div class="d-flex justify-content-center">
                <a class="button_all_white" href="/logout" role="button">
                  <button class="secondary">
                    Log Out
                  </button></a>
                <a class="button_all_black" href="/submit-secret-form" role="button">
                  <button class="secondary">
                    Submit a Secret
                  </button></a>
              </div>
    </div>
  </div>
  <a href="#navbar" id="goToTopBtn" title="Go to top">
    <img src="https://img.icons8.com/ios-filled/50/000000/long-arrow-up.png"
      style="width: 70%; height: 70%; color: white" />
  </a>
  <%- include('partials/footer') %>